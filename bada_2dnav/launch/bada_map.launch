<launch>
  <arg name="database_path"     default="~/.ros/rtabmap.db"/>
  <arg name="rtabmapviz"        default="false"/>
  <arg name="rviz"              default="false"/>
  <arg name="localization"      default="false"/>
  <arg if="$(arg localization)" name="args"  default=""/>
  <arg unless="$(arg localization)" name="args"  default="--delete_db_on_start"/>
  <arg name="wait_for_transform"  default="0.2"/>

  <arg name="rgb_topic"          value="/d400/color/image_raw"/>
  <arg name="depth_topic"        value="/d400/aligned_depth_to_color/image_raw"/>
  <arg name="camera_info_topic"  value="/d400/color/camera_info"/>
  <arg name="depth_camera_info_topic" default="/d400/depth/camera_info"/>
  <arg name="scan_topic" default="/scan"/>
  <arg name="odom_topic" default="/t265/odom/sample"/>
  <arg name="fixed_frame" default="t265_link"/> <!-- base_link-->

  <!--cloud to laser scan -->
  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <remap from="image" to="$(arg depth_topic)"/>
    <remap from="camera_info" to="$(arg depth_camera_info_topic)"/>
    <remap from="scan" to="$(arg scan_topic)"/>
    <param name="range_max" type="double" value="4"/>
    <param name="output_frame_id" type="str" value="d400_depth_frame"/>
  </node>

  <!-- SLAM -->
  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
        <remap from="odom" to="$(arg odom_topic)"/>
        <remap from="scan" to="$(arg scan_topic)"/>
        <remap from="rgb/image" to="$(arg rgb_topic)"/>
        <remap from="depth/image" to="$(arg depth_topic)"/>
        <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
        <remap from="grid_map" to="/map"/>

        <!-- RTAB-Map's parameters -->
        <param name="queue_size" type="int" value="10"/>
        <param name="database_path"                 type="string" value="$(arg database_path)"/>
        <param name="wait_for_transform"            type="bool" value="true"/>
        <param name="wait_for_transform_duration"   type="double"   value="$(arg wait_for_transform)"/>
        <param name="frame_id"                      type="string" value="$(arg fixed_frame)"/>
        <param name="subscribe_depth"               type="bool" value="true"/>
        <param name="subscribe_scan"                type="bool" value="true"/>

        <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
        <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>  <!-- Do odometry correction with consecutive laser scans -->
        <param name="RGBD/ProximityBySpace"     type="string" value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
        <param name="RGBD/ProximityByTime"      type="string" value="false"/> <!-- Local loop closure detection with locations in STM -->
        <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="10"/> <!-- Do also proximity detection by space by merging close scans together. -->
        <param name="Reg/Strategy"              type="string" value="1"/>     <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
        <param name="Vis/InlierDistance"        type="string" value="0.1"/>   <!-- 3D visual words correspondence distance -->
        <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/> <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
        <param name="RGBD/OptimizeMaxError"     type="string" value="2.0"/>        <!-- Reject any loop closure causing large errors (>2x link's covariance) in the map -->
        <param name="Reg/Force3DoF"             type="string" value="true"/>  <!-- 2D SLAM -->
        <param name="Grid/FromDepth"            type="string" value="false"/> <!-- Create 2D occupancy grid from laser scan -->
        <param name="Mem/STMSize"               type="string" value="30"/>    <!-- increased to 30 to avoid adding too many loop closures on just seen locations -->
        <param name="RGBD/LocalRadius"          type="string" value="5"/>     <!-- limit length of proximity detections -->
        <!-- localization mode -->
        <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
        <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
        <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node>
  </group>
</launch>
